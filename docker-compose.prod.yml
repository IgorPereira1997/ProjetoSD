version: "3.3"

services:

  postgres_db:
    container_name: postgres
    hostname: postgres
    image: postgres:14.5-alpine
    env_file:
        - ./.env.prod.db
    volumes:
      - $PWD/postgres_container/pgdata:/var/lib/postgresql/data
      - $PWD/postgres_container/backups/transportadora_vietna:/tmp/transportadora_vietna
      - $PWD/postgres_container/feedDB.sh:/docker-entrypoint-initdb.d/10-init.sh
      # if you want some data restore, point to your backup
      - $PWD/postgres_container/backups:/db_backup
      # point docker to directory with your config
      - $PWD/postgres_container/configs:/db_config
    networks:
      - backend
    ports:
      - 15433:5432

  pgadmin:
    image: dpage/pgadmin4:latest
    hostname: pgadmin
    container_name: pgadmin
    restart: always
    env_file:
        - ./.env.prod.pgadmin
    depends_on:
      - postgres_db
    volumes:
      - ./pgadmin_container/servers.json:/pgadmin4/servers.json
    ports:
      - "8081:80"
    networks:
      - backend
  web:
    build: 
      context: ./web_container
      dockerfile: Dockerfile.prod
    command: gunicorn ProjetoSD_2.wsgi:application --bind 0.0.0.0:8000
    hostname: web
    container_name: web
    restart: always
    volumes:
      - ./web_container:/code
    env_file:
      - ./.env.prod
    ports:
      - "8000:8000"
    expose:
      - 8000
    networks:
      - backend
    depends_on:
      - postgres_db

  nginx:
    build: ./nginx_container
    hostname: nginx
    container_name: nginx
    volumes:
      - ./nginx_container/logs:/home/code/web/logs
      - ./static:/home/code/web/staticfiles
      - ./media:/home/code/web/mediafiles
    ports:
      - 80:80
      - 443:443
    networks:
      - backend
    depends_on:
      - web

networks: 
  backend:
    driver: bridge
#volumes:
#  static:
#  media: